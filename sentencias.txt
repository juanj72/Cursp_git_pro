sentencias git

agregar repo local :

git init

git add .

git commit -m "first commit"

git remote add origin https://github.com/NOMBRE_USUARIO/NOMBRE_PROYECTO.git

git push -u origin master

git remote

git remote -v ----> me indica el repositorio remoto al que estoy conectado




CREACION CARPETA
comando---> mkdir {nombre}


comandos principales
pwd---> nos muestra el path o ruta de la carpeta en donde nos encontramos
cd ----> me permite salir de la carpeta, retroceder
ls---> listar los archivos

clear--->limpiar 
touch--> crear archivos
history--->historial de comandos
rm---> remueve archivos, borrar archivos


git rm --cached {nombre del archivo} ---> saca el archivo de los agregados a subir a repositorio

git config----Configuracion de git
git config --list (ver configuraciones actuales)
git config --global user.name "juan José"
git config --global user.email "core@qskakdpos.com"

git log ---> me muestra el historial de commits
git log --stat ----->> ver cambios detallados


git show ---> me muetsra comparacion de camnbio

pantalla de commits sin mensajes para guardar y salir se hace tecla escape, despues shift+ZZ

git diff {codigo de commit} {codigo de commit a comparar}






git checkout {codigo del commit} {NOMBRE DEL ARCHIVO}

no confundir git reset con git rm, NO SON IGUALES





git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt
git log --all mostrar todo
git log --all --graph --decorate --oneline




git commit -am "nombre del cambio"-----agrega y realiza el commit a la vez

git branch {nombre rama }----------creacion de rama nueva desde el punto donde esta la actual
git branh -d {nombre de la rama a eliminar}

git merge {nombre de la rama} se hace merge desde la rama actual para traer los cambios desde la rama externa



git remote

git remote -v ----> me indica el repositorio remoto al que estoy conectado

prueba

configuracion llave
ssh-keygen -t rsa -b 4096 -C {correo electronico al que está conectado mi github}------ guardarlo en el home del sistema op para windows

alias

alias {nombre}="comando de git" --- le pone un alias a un comando de git

git tag -a v0.1 -m "{mensaje para la version del proyecto}" {hash del commit que quiero nombrar version}

git show-ref --tags   (hace referencia al hash de un tag que ha sido renombrado)

git push origin --tags ( con esto se suben los tags en github)

git tag  (listar tags)
git tag -d {nombre del tag a eliminar}

git push origin :refs/tags/{nombre del tag}  para eliminar un tag en el repo origen.


git show-branch
git show-branch --all mas informacion de las ramas


gitk --- abre entorno grafico de git


git reset. Este comando tiene tres formas de invocación: –hard, –mixed y –soft.
gti reflog para reahcer los cambios que se deshicieron


git rebase MUY MALA PRACTICA, crea una rama y se pega en la ppal, sin dejar historial, reescribe la historia del repositorio


git stash guardar cambios en memoria y recuperarlos despues
git stash list listar cambios en memoria disponibles
git stash pop revertir cambios realizados


git clean